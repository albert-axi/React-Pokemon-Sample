{"version":3,"sources":["pages/HomePage.js","contexts/ThemeContext.js","firebase/firebase.js","contexts/FavouritesContext.js","contexts/PokemonContext.js","contexts/UserContext.js","components/FavouritesButton.js","components/PokeCard.js","components/Pokedex.js","pages/PokemonPage.js","components/Nav.js","pages/ContactPage.js","pages/FavouritesPage.js","components/PokemonShow.js","components/SignInScreen.js","App.js","reportWebVitals.js","index.js"],"names":["MoviePage","Component","themes","light","foreground","background","dark","ThemeContext","createContext","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseEmailAuthProvider","auth","EmailAuthProvider","db","firestore","FavouritesContext","FavouritesContextProvider","props","useReducer","reducer","favourites","favouriteState","dispatch","Provider","value","children","state","action","type","find","pokemon","id","payload","filter","console","log","PokemonContext","PokemonContextProvider","useState","setPokemon","pokemonState","pokemonDataState","UserContext","UserContextProvider","user","setUser","FavouritesButton","name","useContext","pokemonData","findPokemon","poke","getPokemon","handleClick","event","a","deletePokemon","collection","doc","uid","delete","then","catch","error","add","pokemonRef","onClick","PokeCard","image","types","theme","className","style","color","src","alt","join","defaultProps","Pokedex","Object","keys","map","to","sprites","front_default","PokemonPage","display","justifyContent","Nav","ContactPage","useEffect","timer","setInterval","clearInterval","FavouritesPage","pokeId","PokemonShow","match","params","uiConfig","signInFlow","signInSuccessUrl","signInOptions","PROVIDER_ID","SignInScreen","isSignedIn","setIsSignedIn","favouriteDispatch","unregisterAuthObserver","onAuthStateChanged","set","displayName","get","pokemonCollection","docs","forEach","data","currentUser","signOut","firebaseAuth","App","setPokemonData","fetchPokemon","fetch","response","json","results","fetchPokemonData","url","effectCallbackFn","pokeData","prevState","exact","path","component","HomePage","render","routerProps","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5233f9b4.chunk.js","sourcesContent":["import {Component} from 'react'\n\nclass MoviePage extends Component {\n\n  render() {\n    return (\n      <h1>Home Page</h1>\n    )\n  }\n}\n\nexport default MoviePage","import { createContext } from \"react\"\n\nexport const themes = {\n  light: {\n    foreground: \"red\",\n    background: \"yellow\"\n  },\n  dark: {\n    foreground: \"white\",\n    background: \"grey\"\n  }\n};\n\nexport const ThemeContext = createContext(themes.light)","import firebase from 'firebase';\n\n// Configure Firebase.\nconst config = {\n  apiKey: \"AIzaSyBEinzX3VoskpbPG-vViOjGf-kszB68ygY\",\n  authDomain: \"pokemon-react-286be.firebaseapp.com\",\n  projectId: \"pokemon-react-286be\",\n  storageBucket: \"pokemon-react-286be.appspot.com\",\n  messagingSenderId: \"665547111412\",\n  appId: \"1:665547111412:web:ff61e88f8a81f5151017a1\",\n  measurementId: \"G-N4BEN62SK6\"\n};\nfirebase.initializeApp(config);\nexport const firebaseEmailAuthProvider = firebase.auth.EmailAuthProvider\nexport const auth = firebase.auth()\nexport const db = firebase.firestore()","import { createContext, useReducer } from 'react'\nimport { db } from '../firebase/firebase'\n\nexport const FavouritesContext = createContext(null) // created a new context\n\nexport const FavouritesContextProvider = props => {\n  const [favouriteState, dispatch] = useReducer(reducer, { favourites: [] });\n\n  return (\n    <FavouritesContext.Provider value={[favouriteState, dispatch]}>\n      {props.children}\n    </FavouritesContext.Provider>\n  )\n}\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'ADD_POKEMON':\n      //check if pokemon is already in the favourites\n      if (state.favourites.find(pokemon => pokemon.id === action.payload.pokemon.id)) {\n        return state\n      }\n\n      return {\n        favourites: [\n          ...state.favourites, // copy the current favourites collection\n          action.payload.pokemon// add new pokemon\n        ]\n      };\n    case 'REMOVE_POKEMON':\n      return {\n        favourites: state.favourites.filter(pokemon => pokemon.id !== action.payload.pokemon.id) // filter only the pokemons that we want to keep\n      };\n    case 'CLEAR_POKEMON':\n      console.log(\"RESET FAVOURITE POKEMON CONTEXT\")\n      return {\n        favourites: []\n      }\n      \n    default:\n      return state\n  }\n}","import {createContext, useState} from 'react'\n\nexport const PokemonContext = createContext(null) // created a new context\n\nexport const PokemonContextProvider = props => {\n  // const [pokemon, setPokemon] = useState({\n  //   pokemon: [],\n  //   pokemonData: null\n  // }); // [statefulObject, setterMethod]\n\n  const [pokemon, setPokemon] = useState([]);\n  const [pokemonData, setPokemonData] = useState(null);\n\n  const state = {\n        pokemonState: [pokemon, setPokemon], \n        pokemonDataState: [pokemonData, setPokemonData]\n      }\n\n  return (\n    <PokemonContext.Provider value={state}>\n      {props.children}\n    </PokemonContext.Provider>\n  )\n}\n","import {createContext, useState} from 'react'\n\nexport const UserContext = createContext(null) // created a new context\n\nexport const UserContextProvider = props => {\n\n  const [user, setUser] = useState(null)\n\n  return (\n    <UserContext.Provider value={[user, setUser]}>\n      {props.children}\n    </UserContext.Provider>\n  )\n}\n","import { useContext } from \"react\"\nimport { FavouritesContext } from \"../contexts/FavouritesContext\"\nimport { PokemonContext } from \"../contexts/PokemonContext\"\nimport { UserContext } from \"../contexts/UserContext\"\nimport { db } from '../firebase/firebase'\n\nconst FavouritesButton = ({ name }) => {\n  const [user, setUser] = useContext(UserContext)\n  const [favouriteState, dispatch] = useContext(FavouritesContext)\n  const { pokemonDataState } = useContext(PokemonContext);\n  const [pokemonData] = pokemonDataState // destructure pokemonDataState\n\n  const findPokemon = () => favouriteState.favourites.find(poke => poke.name === name) // find the Pokemon in the favourites collection\n\n  const getPokemon = () => {\n    return pokemonData[name] //get the specific pokemon data\n  }\n\n  const handleClick = async event => {\n\n    if (findPokemon()) {\n      const deletePokemon = favouriteState.favourites.find(pokemon => pokemon.id === getPokemon().id)\n\n      db.collection(\"users\")\n        .doc(user.uid)\n        .collection(\"pokemon\")\n        .doc(deletePokemon.uid)\n        .delete()\n        .then(() => {\n          console.log(\"Document successfully deleted!\");\n        }).catch((error) => console.error(\"Error removing document: \", error));\n      \n      dispatch({\n        type: 'REMOVE_POKEMON',\n        payload: {\n          pokemon: getPokemon()\n        }\n      })\n    }\n    else {\n\n      const pokemonRef = await db.collection(\"users\")\n          .doc(user.uid)\n          .collection(\"pokemon\")\n          .add(getPokemon())\n\n          console.log(\"NEW POKEMON\", pokemonRef.id)\n      dispatch({\n        type: 'ADD_POKEMON',\n        payload: {\n          pokemon: {uid: pokemonRef.id, ...getPokemon()}\n        }\n      })\n    }\n\n  }\n\n  return (\n    <button onClick={handleClick}>{ findPokemon() ? \" Remove to Fav\" : \"Add to Fav\" }</button>\n  )\n}\n\nexport default FavouritesButton","import { useContext } from \"react\";\nimport { ThemeContext } from \"../contexts/ThemeContext\";\nimport FavouritesButton from \"./FavouritesButton\";\n\nconst PokeCard = ({image, name, types}) => {\n\n  const theme = useContext(ThemeContext)\n\n  return (\n    <div className=\"poke-card\" style={{ background: theme.background, color: theme.foreground }} >\n      <img src={image} alt={name} />\n      <h2>{name}</h2>\n      <small>Types: {types.join(\", \")}</small>\n      <FavouritesButton name = {name} />\n    </div>\n  )\n}\n\n\nPokeCard.defaultProps = {\n  image: 'http://i.imgur.com/bJw8ndW.png',\n  name: \"Unknown Pokemon\",\n  types: [\"No type\"]\n\n}\n\nexport default PokeCard","import { useContext } from \"react\"\nimport {Link} from 'react-router-dom'\nimport PokeCard from \"./PokeCard\"\nimport { PokemonContext } from '../contexts/PokemonContext'\n\nconst Pokedex = ()=>{\n\n  const {pokemonDataState} = useContext(PokemonContext)\n  const [pokemonData] = pokemonDataState\n\n  const renderPokemonCards = () => {\n\n    return Object.keys(pokemonData).map(pokemon => (\n      <Link key={pokemon} to={`/pokemon/${pokemon}`}>\n        <PokeCard\n          key = {pokemon}\n          image = {pokemonData[pokemon].sprites.front_default}\n          name = {pokemonData[pokemon].name}\n          types = {pokemonData[pokemon].types.map(types=>types.type.name)}\n        />\n      </Link>\n      )\n    )\n  }\n\n\n    return (\n      <div className=\"pokedex\">\n        <h1>Pokedex</h1>\n        <div className=\"pokemon-list\">\n          {renderPokemonCards()}\n        </div>\n      </div>\n    )\n}\n\nexport default Pokedex","import { useContext } from 'react'\nimport Pokedex from '../components/Pokedex'\nimport { PokemonContext } from '../contexts/PokemonContext'\n\nconst PokemonPage = (props)=>{\n\n  const {pokemonState, pokemonDataState} = useContext(PokemonContext);\n\n \n    return (\n      <>\n        <h1 style={{display: 'grid', justifyContent: 'center'}}>Pokemon Page</h1>\n        <Pokedex />\n      </>\n    )\n  \n}\n\nexport default PokemonPage","import { Link } from \"react-router-dom\";\nimport { useContext } from \"react\";\nimport { ThemeContext } from \"../contexts/ThemeContext\";\n\nconst Nav = () => {\n \n  const theme = useContext(ThemeContext)\n\n  return (\n    <nav className=\"nav-bar\" style={{ background: theme.background, color: theme.foreground }}>\n      <Link to=\"/\">Home</Link>\n      <Link to=\"/pokemon\">Pokemon</Link>\n      <Link to=\"/favourites\">Favourites</Link>\n      <Link to=\"/contact\">Contact</Link>\n    </nav>\n  )\n}\n\nexport default Nav","import { useEffect } from \"react\"\n\nconst ContactPage = () => {\n\n  useEffect(() => {\n    const timer = setInterval(() => console.log(\"Hello World\"), 1000)\n    \n    return ()=> clearInterval(timer)\n  }, [])\n\n  return (\n    <h1>Contact Page</h1>\n  )\n}\n\nexport default ContactPage","import { useContext } from \"react\"\nimport { FavouritesContext } from \"../contexts/FavouritesContext\"\nimport PokeCard from \"../components/PokeCard\"\n\nconst FavouritesPage = () => {\n  const [favouriteState] = useContext(FavouritesContext)\n  \n  const renderFavourites = () => favouriteState.favourites.map(pokemon => (<PokeCard\n    key = {pokemon.id}\n    image = {pokemon.sprites.front_default}\n    name = {pokemon.name}\n    types={pokemon.types.map(types => types.type.name)}\n    pokeId = {pokemon.id}\n  />))\n\n  return (\n    <div className=\"pokedex\">\n        <h1>Favourites</h1>\n        <div className=\"pokemon-list\">\n          {renderFavourites()}\n        </div>\n      </div>\n  )\n}\n\nexport default FavouritesPage","import PokeCard from \"./PokeCard\";\n\nconst PokemonShow = ({ match: { params: { pokemon } }, pokemonData }) => {\n\n  return (\n    <div className=\"pokemon-list\">\n      {/* {console.log(\"MATCH:\",window)}\n      <h3>Pokemons Show Component!</h3>\n      <h3>{pokemonData[match.params.pokemon].name}</h3>\n      <img src={pokemonData[match.params.pokemon].sprites.front_default} />\n      <span>Types: {pokemonData[match.params.pokemon].types.map(types => types.type.name).join(\", \")}</span> */}\n      <PokeCard\n          key = {pokemon}\n          image = {pokemonData[pokemon].sprites.front_default}\n          name = {pokemonData[pokemon].name}\n          types = {pokemonData[pokemon].types.map(types=>types.type.name)}\n        />\n    </div>\n  );\n}\n\nexport default PokemonShow;","// Import FirebaseAuth and firebase.\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport { auth, firebaseEmailAuthProvider } from '../firebase/firebase'\nimport { useEffect, useState, useContext } from 'react';\nimport { UserContext } from '../contexts/UserContext'\nimport { FavouritesContext } from '../contexts/FavouritesContext'\nimport { db } from '../firebase/firebase'\n\n// Configure FirebaseUI.\nconst uiConfig = {\n  // Popup signin flow rather than redirect flow.\n  signInFlow: 'popup',\n  // Redirect to /signedIn after sign in is successful. Alternatively you can provide a callbacks.signInSuccess function.\n  signInSuccessUrl: '/React-Pokemon-Sample',\n  // We will display Google and Facebook as auth providers.\n  signInOptions: [\n    firebaseEmailAuthProvider.PROVIDER_ID,\n    // firebase.auth.FacebookAuthProvider.PROVIDER_ID,\n  ],\n};\n\nfunction SignInScreen() {\n  const [isSignedIn, setIsSignedIn] = useState(false); // Local signed-in state.\n\n  const [user, setUser] = useContext(UserContext)\n\n\n  const [favouriteState, favouriteDispatch] = useContext(FavouritesContext)\n\n  // Listen to the Firebase Auth state and set the local state.\n  useEffect(() => {\n    const unregisterAuthObserver = auth.onAuthStateChanged( async user => {\n      setIsSignedIn(!!user)\n      setUser(user)\n\n      if (user) {\n        // setup a user collection in the firestore database\n        db.collection(\"users\").doc(user.uid).set({\n          displayName: user.displayName\n        }) \n        // retrieve the pokemon collection of the logged in user\n        const pokemonCollection = await db.collection(\"users\").doc(user.uid).collection(\"pokemon\").get()\n\n        console.log(\"USER: \", user.uid)\n\n        // add each pokemon to the favourites context\n        pokemonCollection.docs.forEach(pokemon => favouriteDispatch({\n          type: \"ADD_POKEMON\",\n          payload: {\n            pokemon: {\n              uid: pokemon.id,\n              ...pokemon.data()\n            },\n            user\n          }\n        }))  \n      } else {\n        favouriteDispatch({ type: \"CLEAR_POKEMON\" })\n      }\n\n    });\n    return () => unregisterAuthObserver(); // Make sure we un-register Firebase observers when the component unmounts.\n  }, []);\n\n  if (!isSignedIn) {\n    return (\n      <div>\n        <h1>My App</h1>\n        <p>Please sign-in:</p>\n        <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={auth} />\n      </div>\n    );\n  }\n  return (\n    <div>\n      <h1>My App</h1>\n      <p>Welcome {auth.currentUser.displayName}! You are now signed-in!</p>\n      <a onClick={() => auth.signOut()}>Sign-out</a>\n    </div>\n  );\n}\n\nexport default SignInScreen","import { useState, useEffect, createContext, useContext } from 'react'\nimport { BrowserRouter, Route } from 'react-router-dom'\nimport './App.css';\nimport HomePage from './pages/HomePage'\nimport PokemonPage from './pages/PokemonPage'\nimport Nav from './components/Nav'\nimport ContactPage from './pages/ContactPage'\nimport FavouritesPage from './pages/FavouritesPage';\nimport PokemonShow from './components/PokemonShow'\nimport { ThemeContext, themes } from './contexts/ThemeContext'\nimport { PokemonContext } from './contexts/PokemonContext'\nimport SignInScreen from './components/SignInScreen';\nimport './firebaseui-styling.global.css'; // Import globally.\n\n\nconst App = () => {\n\n  const { pokemonState, pokemonDataState } = useContext(PokemonContext);\n\n  const [pokemon, setPokemon] = pokemonState\n  const [pokemonData, setPokemonData] = pokemonDataState\n\n\n  const fetchPokemon = async () => {\n    const response = await fetch('https://pokeapi.co/api/v2/pokemon?limit=151')\n    const data = await response.json()\n\n    return data.results\n  }\n\n  const fetchPokemonData = async (url) => {\n    const response = await fetch(url)\n    const data = await response.json()\n\n    return data\n  }\n\n  const effectCallbackFn = async () => {\n    const pokemon = await fetchPokemon()\n    setPokemon(pokemon)\n\n\n    pokemon.forEach(async poke => {\n      const pokeData = await fetchPokemonData(poke.url)\n\n      setPokemonData(prevState => {\n        return {\n          ...prevState,\n          [poke.name]: pokeData\n        }\n      })\n    })\n  }\n\n  useEffect(effectCallbackFn, [])\n\n\n  return (\n    <ThemeContext.Provider value={themes.light}>\n      <BrowserRouter>\n        <Nav />\n        <SignInScreen />\n        <Route exact path=\"/\" component={HomePage} />\n        <Route path=\"/contact\" component={ContactPage} />\n        <Route path=\"/favourites\" component={FavouritesPage} />\n        <Route exact path=\"/pokemon\" render={routerProps => {\n\n          return (Object.keys(pokemonData).length === pokemon.length ?\n            <PokemonPage {...routerProps} /> :\n            <h1>No Pokemons to Show</h1>\n          )\n        }\n        } />\n        <Route path=\"/pokemon/:pokemon\" render={routerProps => (\n          <PokemonShow\n            {...routerProps}\n            pokemonData={pokemonData}\n          />\n        )} />\n      </BrowserRouter>\n    </ThemeContext.Provider>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\nimport { PokemonContextProvider } from './contexts/PokemonContext'\nimport { UserContextProvider } from './contexts/UserContext'\nimport { FavouritesContextProvider } from './contexts/FavouritesContext'\n\nReactDOM.render(\n  <React.StrictMode>\n    <UserContextProvider>\n      <FavouritesContextProvider>\n        <PokemonContextProvider>\n          <App />\n        </PokemonContextProvider>\n      </FavouritesContextProvider>\n    </UserContextProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\n// serviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}